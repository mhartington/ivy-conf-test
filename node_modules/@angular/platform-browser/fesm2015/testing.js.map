{"version":3,"sources":["/Users/mhartington/GitHub/ionic-conference-app/node_modules/@angular/platform-browser/fesm2015/testing.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAiQC,mBAUC","file":"testing.js","sourcesContent":["/**\n * @license Angular v9.0.0-next.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵglobal, NgZone, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, NgModule, APP_ID } from '@angular/core';\nimport { ɵgetDOM, ɵBrowserDomAdapter, BrowserModule, ɵELEMENT_PROBE_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet browserDetection;\nclass BrowserDetection {\n    /**\n     * @private\n     * @return {?}\n     */\n    get _ua() {\n        if (typeof this._overrideUa === 'string') {\n            return this._overrideUa;\n        }\n        return ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    }\n    /**\n     * @return {?}\n     */\n    static setup() { browserDetection = new BrowserDetection(null); }\n    /**\n     * @param {?} ua\n     */\n    constructor(ua) { this._overrideUa = ua; }\n    /**\n     * @return {?}\n     */\n    get isFirefox() { return this._ua.indexOf('Firefox') > -1; }\n    /**\n     * @return {?}\n     */\n    get isAndroid() {\n        return this._ua.indexOf('Mozilla/5.0') > -1 && this._ua.indexOf('Android') > -1 &&\n            this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Chrome') == -1 &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isEdge() { return this._ua.indexOf('Edge') > -1; }\n    /**\n     * @return {?}\n     */\n    get isIE() { return this._ua.indexOf('Trident') > -1; }\n    /**\n     * @return {?}\n     */\n    get isWebkit() {\n        return this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Edge') == -1 &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isIOS7() {\n        return (this._ua.indexOf('iPhone OS 7') > -1 || this._ua.indexOf('iPad OS 7') > -1) &&\n            this._ua.indexOf('IEMobile') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get isSlow() { return this.isAndroid || this.isIE || this.isIOS7; }\n    // The Intl API is only natively supported in Chrome, Firefox, IE11 and Edge.\n    // This detector is needed in tests to make the difference between:\n    // 1) IE11/Edge: they have a native Intl API, but with some discrepancies\n    // 2) IE9/IE10: they use the polyfill, and so no discrepancies\n    /**\n     * @return {?}\n     */\n    get supportsNativeIntlApi() {\n        return !!((/** @type {?} */ (ɵglobal))).Intl && ((/** @type {?} */ (ɵglobal))).Intl !== ((/** @type {?} */ (ɵglobal))).IntlPolyfill;\n    }\n    /**\n     * @return {?}\n     */\n    get isChromeDesktop() {\n        return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Mobile Safari') == -1 &&\n            this._ua.indexOf('Edge') == -1;\n    }\n    // \"Old Chrome\" means Chrome 3X, where there are some discrepancies in the Intl API.\n    // Android 4.4 and 5.X have such browsers by default (respectively 30 and 39).\n    /**\n     * @return {?}\n     */\n    get isOldChrome() {\n        return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Chrome/3') > -1 &&\n            this._ua.indexOf('Edge') == -1;\n    }\n    /**\n     * @return {?}\n     */\n    get supportsCustomElements() { return (typeof ((/** @type {?} */ (ɵglobal))).customElements !== 'undefined'); }\n    /**\n     * @return {?}\n     */\n    get supportsDeprecatedCustomCustomElementsV0() {\n        return (typeof ((/** @type {?} */ (document))).registerElement !== 'undefined');\n    }\n    /**\n     * @return {?}\n     */\n    get supportsRegExUnicodeFlag() { return RegExp.prototype.hasOwnProperty('unicode'); }\n    /**\n     * @return {?}\n     */\n    get supportsShadowDom() {\n        /** @type {?} */\n        const testEl = document.createElement('div');\n        return (typeof testEl.attachShadow !== 'undefined');\n    }\n    /**\n     * @return {?}\n     */\n    get supportsDeprecatedShadowDomV0() {\n        /** @type {?} */\n        const testEl = (/** @type {?} */ (document.createElement('div')));\n        return (typeof testEl.createShadowRoot !== 'undefined');\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BrowserDetection.prototype._overrideUa;\n}\nBrowserDetection.setup();\n/**\n * @param {?} element\n * @param {?} eventType\n * @return {?}\n */\nfunction dispatchEvent(element, eventType) {\n    ɵgetDOM().dispatchEvent(element, ɵgetDOM().createEvent(eventType));\n}\n/**\n * @param {?} html\n * @return {?}\n */\nfunction el(html) {\n    return (/** @type {?} */ (ɵgetDOM().firstChild(ɵgetDOM().content(ɵgetDOM().createTemplate(html)))));\n}\n/**\n * @param {?} css\n * @return {?}\n */\nfunction normalizeCSS(css) {\n    return css.replace(/\\s+/g, ' ')\n        .replace(/:\\s/g, ':')\n        .replace(/'/g, '\"')\n        .replace(/ }/g, '}')\n        .replace(/url\\((\\\"|\\s)(.+)(\\\"|\\s)\\)(\\s*)/g, (/**\n     * @param {...?} match\n     * @return {?}\n     */\n    (...match) => `url(\"${match[2]}\")`))\n        .replace(/\\[(.+)=([^\"\\]]+)\\]/g, (/**\n     * @param {...?} match\n     * @return {?}\n     */\n    (...match) => `[${match[1]}=\"${match[2]}\"]`));\n}\n/** @type {?} */\nconst _selfClosingTags = ['br', 'hr', 'input'];\n/**\n * @param {?} el\n * @return {?}\n */\nfunction stringifyElement(el /** TODO #9100 */) {\n    /** @type {?} */\n    let result = '';\n    if (ɵgetDOM().isElementNode(el)) {\n        /** @type {?} */\n        const tagName = ɵgetDOM().tagName(el).toLowerCase();\n        // Opening tag\n        result += `<${tagName}`;\n        // Attributes in an ordered way\n        /** @type {?} */\n        const attributeMap = ɵgetDOM().attributeMap(el);\n        /** @type {?} */\n        const sortedKeys = Array.from(attributeMap.keys()).sort();\n        for (const key of sortedKeys) {\n            /** @type {?} */\n            const lowerCaseKey = key.toLowerCase();\n            /** @type {?} */\n            let attValue = attributeMap.get(key);\n            if (typeof attValue !== 'string') {\n                result += ` ${lowerCaseKey}`;\n            }\n            else {\n                // Browsers order style rules differently. Order them alphabetically for consistency.\n                if (lowerCaseKey === 'style') {\n                    attValue = attValue.split(/; ?/).filter((/**\n                     * @param {?} s\n                     * @return {?}\n                     */\n                    s => !!s)).sort().map((/**\n                     * @param {?} s\n                     * @return {?}\n                     */\n                    s => `${s};`)).join(' ');\n                }\n                result += ` ${lowerCaseKey}=\"${attValue}\"`;\n            }\n        }\n        result += '>';\n        // Children\n        /** @type {?} */\n        const childrenRoot = ɵgetDOM().templateAwareRoot(el);\n        /** @type {?} */\n        const children = childrenRoot ? ɵgetDOM().childNodes(childrenRoot) : [];\n        for (let j = 0; j < children.length; j++) {\n            result += stringifyElement(children[j]);\n        }\n        // Closing tag\n        if (_selfClosingTags.indexOf(tagName) == -1) {\n            result += `</${tagName}>`;\n        }\n    }\n    else if (ɵgetDOM().isCommentNode(el)) {\n        result += `<!--${ɵgetDOM().nodeValue(el)}-->`;\n    }\n    else {\n        result += ɵgetDOM().getText(el);\n    }\n    return result;\n}\n/**\n * @return {?}\n */\nfunction createNgZone() {\n    return new NgZone({ enableLongStackTrace: true });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initBrowserTests() {\n    ɵBrowserDomAdapter.makeCurrent();\n    BrowserDetection.setup();\n}\n/** @type {?} */\nconst _TEST_BROWSER_PLATFORM_PROVIDERS = [{ provide: PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true }];\n/**\n * Platform for testing\n *\n * \\@publicApi\n * @type {?}\n */\nconst platformBrowserTesting = createPlatformFactory(platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);\nconst ɵ0 = createNgZone;\n/**\n * NgModule for testing.\n *\n * \\@publicApi\n */\nclass BrowserTestingModule {\n}\nBrowserTestingModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [BrowserModule],\n                providers: [\n                    { provide: APP_ID, useValue: 'a' },\n                    ɵELEMENT_PROBE_PROVIDERS,\n                    { provide: NgZone, useFactory: ɵ0 },\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createNgZone as ɵangular_packages_platform_browser_testing_testing_a, platformBrowserTesting, BrowserTestingModule };\n"]}