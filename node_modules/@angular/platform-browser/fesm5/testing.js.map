{"version":3,"sources":["/Users/mhartington/GitHub/ionic-conference-app/node_modules/@angular/platform-browser/fesm5/testing.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsOK;;;;;;;;;;;;;;;;;;0CAUwB","file":"testing.js","sourcesContent":["/**\n * @license Angular v9.0.0-next.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __values, __decorate } from 'tslib';\nimport { ɵglobal, NgZone, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, NgModule, APP_ID } from '@angular/core';\nimport { ɵgetDOM, ɵBrowserDomAdapter, BrowserModule, ɵELEMENT_PROBE_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar browserDetection;\nvar BrowserDetection = /** @class */ (function () {\n    function BrowserDetection(ua) {\n        this._overrideUa = ua;\n    }\n    Object.defineProperty(BrowserDetection.prototype, \"_ua\", {\n        get: function () {\n            if (typeof this._overrideUa === 'string') {\n                return this._overrideUa;\n            }\n            return ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BrowserDetection.setup = function () { browserDetection = new BrowserDetection(null); };\n    Object.defineProperty(BrowserDetection.prototype, \"isFirefox\", {\n        get: function () { return this._ua.indexOf('Firefox') > -1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isAndroid\", {\n        get: function () {\n            return this._ua.indexOf('Mozilla/5.0') > -1 && this._ua.indexOf('Android') > -1 &&\n                this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Chrome') == -1 &&\n                this._ua.indexOf('IEMobile') == -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isEdge\", {\n        get: function () { return this._ua.indexOf('Edge') > -1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isIE\", {\n        get: function () { return this._ua.indexOf('Trident') > -1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isWebkit\", {\n        get: function () {\n            return this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Edge') == -1 &&\n                this._ua.indexOf('IEMobile') == -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isIOS7\", {\n        get: function () {\n            return (this._ua.indexOf('iPhone OS 7') > -1 || this._ua.indexOf('iPad OS 7') > -1) &&\n                this._ua.indexOf('IEMobile') == -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isSlow\", {\n        get: function () { return this.isAndroid || this.isIE || this.isIOS7; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsNativeIntlApi\", {\n        // The Intl API is only natively supported in Chrome, Firefox, IE11 and Edge.\n        // This detector is needed in tests to make the difference between:\n        // 1) IE11/Edge: they have a native Intl API, but with some discrepancies\n        // 2) IE9/IE10: they use the polyfill, and so no discrepancies\n        get: function () {\n            return !!ɵglobal.Intl && ɵglobal.Intl !== ɵglobal.IntlPolyfill;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isChromeDesktop\", {\n        get: function () {\n            return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Mobile Safari') == -1 &&\n                this._ua.indexOf('Edge') == -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"isOldChrome\", {\n        // \"Old Chrome\" means Chrome 3X, where there are some discrepancies in the Intl API.\n        // Android 4.4 and 5.X have such browsers by default (respectively 30 and 39).\n        get: function () {\n            return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Chrome/3') > -1 &&\n                this._ua.indexOf('Edge') == -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsCustomElements\", {\n        get: function () { return (typeof ɵglobal.customElements !== 'undefined'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsDeprecatedCustomCustomElementsV0\", {\n        get: function () {\n            return (typeof document.registerElement !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsRegExUnicodeFlag\", {\n        get: function () { return RegExp.prototype.hasOwnProperty('unicode'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsShadowDom\", {\n        get: function () {\n            var testEl = document.createElement('div');\n            return (typeof testEl.attachShadow !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserDetection.prototype, \"supportsDeprecatedShadowDomV0\", {\n        get: function () {\n            var testEl = document.createElement('div');\n            return (typeof testEl.createShadowRoot !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BrowserDetection;\n}());\nBrowserDetection.setup();\nfunction dispatchEvent(element, eventType) {\n    ɵgetDOM().dispatchEvent(element, ɵgetDOM().createEvent(eventType));\n}\nfunction el(html) {\n    return ɵgetDOM().firstChild(ɵgetDOM().content(ɵgetDOM().createTemplate(html)));\n}\nfunction normalizeCSS(css) {\n    return css.replace(/\\s+/g, ' ')\n        .replace(/:\\s/g, ':')\n        .replace(/'/g, '\"')\n        .replace(/ }/g, '}')\n        .replace(/url\\((\\\"|\\s)(.+)(\\\"|\\s)\\)(\\s*)/g, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        return \"url(\\\"\" + match[2] + \"\\\")\";\n    })\n        .replace(/\\[(.+)=([^\"\\]]+)\\]/g, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        return \"[\" + match[1] + \"=\\\"\" + match[2] + \"\\\"]\";\n    });\n}\nvar _selfClosingTags = ['br', 'hr', 'input'];\nfunction stringifyElement(el /** TODO #9100 */) {\n    var e_1, _a;\n    var result = '';\n    if (ɵgetDOM().isElementNode(el)) {\n        var tagName = ɵgetDOM().tagName(el).toLowerCase();\n        // Opening tag\n        result += \"<\" + tagName;\n        // Attributes in an ordered way\n        var attributeMap = ɵgetDOM().attributeMap(el);\n        var sortedKeys = Array.from(attributeMap.keys()).sort();\n        try {\n            for (var sortedKeys_1 = __values(sortedKeys), sortedKeys_1_1 = sortedKeys_1.next(); !sortedKeys_1_1.done; sortedKeys_1_1 = sortedKeys_1.next()) {\n                var key = sortedKeys_1_1.value;\n                var lowerCaseKey = key.toLowerCase();\n                var attValue = attributeMap.get(key);\n                if (typeof attValue !== 'string') {\n                    result += \" \" + lowerCaseKey;\n                }\n                else {\n                    // Browsers order style rules differently. Order them alphabetically for consistency.\n                    if (lowerCaseKey === 'style') {\n                        attValue = attValue.split(/; ?/).filter(function (s) { return !!s; }).sort().map(function (s) { return s + \";\"; }).join(' ');\n                    }\n                    result += \" \" + lowerCaseKey + \"=\\\"\" + attValue + \"\\\"\";\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (sortedKeys_1_1 && !sortedKeys_1_1.done && (_a = sortedKeys_1.return)) _a.call(sortedKeys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        result += '>';\n        // Children\n        var childrenRoot = ɵgetDOM().templateAwareRoot(el);\n        var children = childrenRoot ? ɵgetDOM().childNodes(childrenRoot) : [];\n        for (var j = 0; j < children.length; j++) {\n            result += stringifyElement(children[j]);\n        }\n        // Closing tag\n        if (_selfClosingTags.indexOf(tagName) == -1) {\n            result += \"</\" + tagName + \">\";\n        }\n    }\n    else if (ɵgetDOM().isCommentNode(el)) {\n        result += \"<!--\" + ɵgetDOM().nodeValue(el) + \"-->\";\n    }\n    else {\n        result += ɵgetDOM().getText(el);\n    }\n    return result;\n}\nfunction createNgZone() {\n    return new NgZone({ enableLongStackTrace: true });\n}\n\nfunction initBrowserTests() {\n    ɵBrowserDomAdapter.makeCurrent();\n    BrowserDetection.setup();\n}\nvar _TEST_BROWSER_PLATFORM_PROVIDERS = [{ provide: PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true }];\n/**\n * Platform for testing\n *\n * @publicApi\n */\nvar platformBrowserTesting = createPlatformFactory(platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);\nvar ɵ0 = createNgZone;\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nvar BrowserTestingModule = /** @class */ (function () {\n    function BrowserTestingModule() {\n    }\n    BrowserTestingModule = __decorate([\n        NgModule({\n            exports: [BrowserModule],\n            providers: [\n                { provide: APP_ID, useValue: 'a' },\n                ɵELEMENT_PROBE_PROVIDERS,\n                { provide: NgZone, useFactory: ɵ0 },\n            ]\n        })\n    ], BrowserTestingModule);\n    return BrowserTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createNgZone as ɵangular_packages_platform_browser_testing_testing_a, platformBrowserTesting, BrowserTestingModule, ɵ0 };\n"]}