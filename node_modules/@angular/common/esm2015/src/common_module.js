/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NgModule } from '@angular/core';
import { COMMON_DIRECTIVES } from './directives/index';
import { DEPRECATED_PLURAL_FN, NgLocaleLocalization, NgLocalization, getPluralCase } from './i18n/localization';
import { COMMON_DEPRECATED_I18N_PIPES } from './pipes/deprecated/index';
import { COMMON_PIPES } from './pipes/index';
// Note: This does not contain the location providers,
// as they need some platform specific implementations to work.
/**
 * Exports all the basic Angular directives and pipes,
 * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.
 * Re-exported by `BrowserModule`, which is included automatically in the root
 * `AppModule` when you create a new app with the CLI `new` command.
 *
 * * The `providers` options configure the NgModule's injector to provide
 * localization dependencies to members.
 * * The `exports` options make the declared directives and pipes available for import
 * by other NgModules.
 *
 * \@publicApi
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './directives/ng_class';
import * as ɵngcc2 from './directives/ng_component_outlet';
import * as ɵngcc3 from './directives/ng_for_of';
import * as ɵngcc4 from './directives/ng_if';
import * as ɵngcc5 from './directives/ng_template_outlet';
import * as ɵngcc6 from './directives/ng_style';
import * as ɵngcc7 from './directives/ng_switch';
import * as ɵngcc8 from './directives/ng_plural';
import * as ɵngcc9 from './pipes/async_pipe';
import * as ɵngcc10 from './pipes/case_conversion_pipes';
import * as ɵngcc11 from './pipes/json_pipe';
import * as ɵngcc12 from './pipes/slice_pipe';
import * as ɵngcc13 from './pipes/number_pipe';
import * as ɵngcc14 from './pipes/date_pipe';
import * as ɵngcc15 from './pipes/i18n_plural_pipe';
import * as ɵngcc16 from './pipes/i18n_select_pipe';
import * as ɵngcc17 from './pipes/keyvalue_pipe';
import * as ɵngcc18 from './pipes/deprecated/number_pipe';
import * as ɵngcc19 from './pipes/deprecated/date_pipe';
export class CommonModule {
}
CommonModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: CommonModule });
CommonModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function CommonModule_Factory(t) { return new (t || CommonModule)(); }, providers: [
        { provide: NgLocalization, useClass: NgLocaleLocalization },
    ] });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(CommonModule, { declarations: [ɵngcc1.NgClass, ɵngcc2.NgComponentOutlet, ɵngcc3.NgForOf, ɵngcc4.NgIf, ɵngcc5.NgTemplateOutlet, ɵngcc6.NgStyle, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc7.NgSwitchDefault, ɵngcc8.NgPlural, ɵngcc8.NgPluralCase, ɵngcc9.AsyncPipe, ɵngcc10.UpperCasePipe, ɵngcc10.LowerCasePipe, ɵngcc11.JsonPipe, ɵngcc12.SlicePipe, ɵngcc13.DecimalPipe, ɵngcc13.PercentPipe, ɵngcc10.TitleCasePipe, ɵngcc13.CurrencyPipe, ɵngcc14.DatePipe, ɵngcc15.I18nPluralPipe, ɵngcc16.I18nSelectPipe, ɵngcc17.KeyValuePipe], exports: [ɵngcc1.NgClass, ɵngcc2.NgComponentOutlet, ɵngcc3.NgForOf, ɵngcc4.NgIf, ɵngcc5.NgTemplateOutlet, ɵngcc6.NgStyle, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc7.NgSwitchDefault, ɵngcc8.NgPlural, ɵngcc8.NgPluralCase, ɵngcc9.AsyncPipe, ɵngcc10.UpperCasePipe, ɵngcc10.LowerCasePipe, ɵngcc11.JsonPipe, ɵngcc12.SlicePipe, ɵngcc13.DecimalPipe, ɵngcc13.PercentPipe, ɵngcc10.TitleCasePipe, ɵngcc13.CurrencyPipe, ɵngcc14.DatePipe, ɵngcc15.I18nPluralPipe, ɵngcc16.I18nSelectPipe, ɵngcc17.KeyValuePipe] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(CommonModule, [{
        type: NgModule,
        args: [{
                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],
                exports: [COMMON_DIRECTIVES, COMMON_PIPES],
                providers: [
                    { provide: NgLocalization, useClass: NgLocaleLocalization },
                ]
            }]
    }], null, null);
const ɵ0 = getPluralCase;
/**
 * A module that contains the deprecated i18n pipes.
 *
 * @deprecated from v5
 * \@publicApi
 */
export class DeprecatedI18NPipesModule {
}
DeprecatedI18NPipesModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: DeprecatedI18NPipesModule });
DeprecatedI18NPipesModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function DeprecatedI18NPipesModule_Factory(t) { return new (t || DeprecatedI18NPipesModule)(); }, providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }] });
/*@__PURE__*/ ɵngcc0.ɵɵsetNgModuleScope(DeprecatedI18NPipesModule, { declarations: [ɵngcc18.DeprecatedDecimalPipe, ɵngcc18.DeprecatedPercentPipe, ɵngcc18.DeprecatedCurrencyPipe, ɵngcc19.DeprecatedDatePipe], exports: [ɵngcc18.DeprecatedDecimalPipe, ɵngcc18.DeprecatedPercentPipe, ɵngcc18.DeprecatedCurrencyPipe, ɵngcc19.DeprecatedDatePipe] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DeprecatedI18NPipesModule, [{
        type: NgModule,
        args: [{
                declarations: [COMMON_DEPRECATED_I18N_PIPES],
                exports: [COMMON_DEPRECATED_I18N_PIPES],
                providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }]
            }]
    }], null, null);
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taGFydGluZ3Rvbi9HaXRIdWIvaW9uaWMtY29uZmVyZW5jZS1hcHAvbm9kZV9tb2R1bGVzL0Bhbmd1bGFyL2NvbW1vbi9lc20yMDE1L3NyYy9jb21tb25fbW9kdWxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FDQyxtQkFTQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FTRCxtQkFPQyIsImZpbGUiOiJjb21tb25fbW9kdWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxjb25zdGFudFByb3BlcnR5LGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENPTU1PTl9ESVJFQ1RJVkVTIH0gZnJvbSAnLi9kaXJlY3RpdmVzL2luZGV4JztcbmltcG9ydCB7IERFUFJFQ0FURURfUExVUkFMX0ZOLCBOZ0xvY2FsZUxvY2FsaXphdGlvbiwgTmdMb2NhbGl6YXRpb24sIGdldFBsdXJhbENhc2UgfSBmcm9tICcuL2kxOG4vbG9jYWxpemF0aW9uJztcbmltcG9ydCB7IENPTU1PTl9ERVBSRUNBVEVEX0kxOE5fUElQRVMgfSBmcm9tICcuL3BpcGVzL2RlcHJlY2F0ZWQvaW5kZXgnO1xuaW1wb3J0IHsgQ09NTU9OX1BJUEVTIH0gZnJvbSAnLi9waXBlcy9pbmRleCc7XG4vLyBOb3RlOiBUaGlzIGRvZXMgbm90IGNvbnRhaW4gdGhlIGxvY2F0aW9uIHByb3ZpZGVycyxcbi8vIGFzIHRoZXkgbmVlZCBzb21lIHBsYXRmb3JtIHNwZWNpZmljIGltcGxlbWVudGF0aW9ucyB0byB3b3JrLlxuLyoqXG4gKiBFeHBvcnRzIGFsbCB0aGUgYmFzaWMgQW5ndWxhciBkaXJlY3RpdmVzIGFuZCBwaXBlcyxcbiAqIHN1Y2ggYXMgYE5nSWZgLCBgTmdGb3JPZmAsIGBEZWNpbWFsUGlwZWAsIGFuZCBzbyBvbi5cbiAqIFJlLWV4cG9ydGVkIGJ5IGBCcm93c2VyTW9kdWxlYCwgd2hpY2ggaXMgaW5jbHVkZWQgYXV0b21hdGljYWxseSBpbiB0aGUgcm9vdFxuICogYEFwcE1vZHVsZWAgd2hlbiB5b3UgY3JlYXRlIGEgbmV3IGFwcCB3aXRoIHRoZSBDTEkgYG5ld2AgY29tbWFuZC5cbiAqXG4gKiAqIFRoZSBgcHJvdmlkZXJzYCBvcHRpb25zIGNvbmZpZ3VyZSB0aGUgTmdNb2R1bGUncyBpbmplY3RvciB0byBwcm92aWRlXG4gKiBsb2NhbGl6YXRpb24gZGVwZW5kZW5jaWVzIHRvIG1lbWJlcnMuXG4gKiAqIFRoZSBgZXhwb3J0c2Agb3B0aW9ucyBtYWtlIHRoZSBkZWNsYXJlZCBkaXJlY3RpdmVzIGFuZCBwaXBlcyBhdmFpbGFibGUgZm9yIGltcG9ydFxuICogYnkgb3RoZXIgTmdNb2R1bGVzLlxuICpcbiAqIFxcQHB1YmxpY0FwaVxuICovXG5leHBvcnQgY2xhc3MgQ29tbW9uTW9kdWxlIHtcbn1cbkNvbW1vbk1vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogTmdNb2R1bGUsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbQ09NTU9OX0RJUkVDVElWRVMsIENPTU1PTl9QSVBFU10sXG4gICAgICAgICAgICAgICAgZXhwb3J0czogW0NPTU1PTl9ESVJFQ1RJVkVTLCBDT01NT05fUElQRVNdLFxuICAgICAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IE5nTG9jYWxpemF0aW9uLCB1c2VDbGFzczogTmdMb2NhbGVMb2NhbGl6YXRpb24gfSxcbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxdIH1cbl07XG5jb25zdCDJtTAgPSBnZXRQbHVyYWxDYXNlO1xuLyoqXG4gKiBBIG1vZHVsZSB0aGF0IGNvbnRhaW5zIHRoZSBkZXByZWNhdGVkIGkxOG4gcGlwZXMuXG4gKlxuICogQGRlcHJlY2F0ZWQgZnJvbSB2NVxuICogXFxAcHVibGljQXBpXG4gKi9cbmV4cG9ydCBjbGFzcyBEZXByZWNhdGVkSTE4TlBpcGVzTW9kdWxlIHtcbn1cbkRlcHJlY2F0ZWRJMThOUGlwZXNNb2R1bGUuZGVjb3JhdG9ycyA9IFtcbiAgICB7IHR5cGU6IE5nTW9kdWxlLCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW0NPTU1PTl9ERVBSRUNBVEVEX0kxOE5fUElQRVNdLFxuICAgICAgICAgICAgICAgIGV4cG9ydHM6IFtDT01NT05fREVQUkVDQVRFRF9JMThOX1BJUEVTXSxcbiAgICAgICAgICAgICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IERFUFJFQ0FURURfUExVUkFMX0ZOLCB1c2VWYWx1ZTogybUwIH1dLFxuICAgICAgICAgICAgfSxdIH1cbl07XG5leHBvcnQgeyDJtTAgfTtcbiJdfQ==