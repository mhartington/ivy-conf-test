{"version":3,"sources":["/Users/mhartington/GitHub/ionic-conference-app/node_modules/@angular/service-worker/fesm5/config.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeA","file":"config.js","sourcesContent":["/**\n * @license Angular v9.0.0-next.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { __spread, __awaiter, __generator } from 'tslib';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PARSE_TO_PAIRS = /([0-9]+[^0-9]+)/g;\nvar PAIR_SPLIT = /^([0-9]+)([dhmsu]+)$/;\nfunction parseDurationToMs(duration) {\n    var matches = [];\n    var array;\n    while ((array = PARSE_TO_PAIRS.exec(duration)) !== null) {\n        matches.push(array[0]);\n    }\n    return matches\n        .map(function (match) {\n        var res = PAIR_SPLIT.exec(match);\n        if (res === null) {\n            throw new Error(\"Not a valid duration: \" + match);\n        }\n        var factor = 0;\n        switch (res[2]) {\n            case 'd':\n                factor = 86400000;\n                break;\n            case 'h':\n                factor = 3600000;\n                break;\n            case 'm':\n                factor = 60000;\n                break;\n            case 's':\n                factor = 1000;\n                break;\n            case 'u':\n                factor = 1;\n                break;\n            default:\n                throw new Error(\"Not a valid duration unit: \" + res[2]);\n        }\n        return parseInt(res[1]) * factor;\n    })\n        .reduce(function (total, value) { return total + value; }, 0);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUESTION_MARK = '[^/]';\nvar WILD_SINGLE = '[^/]*';\nvar WILD_OPEN = '(?:.+\\\\/)?';\nvar TO_ESCAPE_BASE = [\n    { replace: /\\./g, with: '\\\\.' },\n    { replace: /\\+/g, with: '\\\\+' },\n    { replace: /\\*/g, with: WILD_SINGLE },\n];\nvar TO_ESCAPE_WILDCARD_QM = __spread(TO_ESCAPE_BASE, [\n    { replace: /\\?/g, with: QUESTION_MARK },\n]);\nvar TO_ESCAPE_LITERAL_QM = __spread(TO_ESCAPE_BASE, [\n    { replace: /\\?/g, with: '\\\\?' },\n]);\nfunction globToRegex(glob, literalQuestionMark) {\n    if (literalQuestionMark === void 0) { literalQuestionMark = false; }\n    var toEscape = literalQuestionMark ? TO_ESCAPE_LITERAL_QM : TO_ESCAPE_WILDCARD_QM;\n    var segments = glob.split('/').reverse();\n    var regex = '';\n    while (segments.length > 0) {\n        var segment = segments.pop();\n        if (segment === '**') {\n            if (segments.length > 0) {\n                regex += WILD_OPEN;\n            }\n            else {\n                regex += '.*';\n            }\n        }\n        else {\n            var processed = toEscape.reduce(function (segment, escape) { return segment.replace(escape.replace, escape.with); }, segment);\n            regex += processed;\n            if (segments.length > 0) {\n                regex += '\\\\/';\n            }\n        }\n    }\n    return regex;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_NAVIGATION_URLS = [\n    '/**',\n    '!/**/*.*',\n    '!/**/*__*',\n    '!/**/*__*/**',\n];\n/**\n * Consumes service worker configuration files and processes them into control files.\n *\n * @publicApi\n */\nvar Generator = /** @class */ (function () {\n    function Generator(fs, baseHref) {\n        this.fs = fs;\n        this.baseHref = baseHref;\n    }\n    Generator.prototype.process = function (config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var unorderedHashTable, assetGroups;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        unorderedHashTable = {};\n                        return [4 /*yield*/, this.processAssetGroups(config, unorderedHashTable)];\n                    case 1:\n                        assetGroups = _a.sent();\n                        return [2 /*return*/, {\n                                configVersion: 1,\n                                timestamp: Date.now(),\n                                appData: config.appData,\n                                index: joinUrls(this.baseHref, config.index), assetGroups: assetGroups,\n                                dataGroups: this.processDataGroups(config),\n                                hashTable: withOrderedKeys(unorderedHashTable),\n                                navigationUrls: processNavigationUrls(this.baseHref, config.navigationUrls),\n                            }];\n                }\n            });\n        });\n    };\n    Generator.prototype.processAssetGroups = function (config, hashTable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seenMap;\n            var _this = this;\n            return __generator(this, function (_a) {\n                seenMap = new Set();\n                return [2 /*return*/, Promise.all((config.assetGroups || []).map(function (group) { return __awaiter(_this, void 0, void 0, function () {\n                        var fileMatcher, versionedMatcher, allFiles, plainFiles, versionedFiles, matchedFiles;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    if (group.resources.versionedFiles) {\n                                        console.warn(\"Asset-group '\" + group.name + \"' in 'ngsw-config.json' uses the 'versionedFiles' option.\\n\" +\n                                            'As of v6 \\'versionedFiles\\' and \\'files\\' options have the same behavior. ' +\n                                            'Use \\'files\\' instead.');\n                                    }\n                                    fileMatcher = globListToMatcher(group.resources.files || []);\n                                    versionedMatcher = globListToMatcher(group.resources.versionedFiles || []);\n                                    return [4 /*yield*/, this.fs.list('/')];\n                                case 1:\n                                    allFiles = _a.sent();\n                                    plainFiles = allFiles.filter(fileMatcher).filter(function (file) { return !seenMap.has(file); });\n                                    plainFiles.forEach(function (file) { return seenMap.add(file); });\n                                    versionedFiles = allFiles.filter(versionedMatcher).filter(function (file) { return !seenMap.has(file); });\n                                    versionedFiles.forEach(function (file) { return seenMap.add(file); });\n                                    matchedFiles = __spread(plainFiles, versionedFiles).sort();\n                                    return [4 /*yield*/, matchedFiles.reduce(function (previous, file) { return __awaiter(_this, void 0, void 0, function () {\n                                            var hash;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0: return [4 /*yield*/, previous];\n                                                    case 1:\n                                                        _a.sent();\n                                                        return [4 /*yield*/, this.fs.hash(file)];\n                                                    case 2:\n                                                        hash = _a.sent();\n                                                        hashTable[joinUrls(this.baseHref, file)] = hash;\n                                                        return [2 /*return*/];\n                                                }\n                                            });\n                                        }); }, Promise.resolve())];\n                                case 2:\n                                    _a.sent();\n                                    return [2 /*return*/, {\n                                            name: group.name,\n                                            installMode: group.installMode || 'prefetch',\n                                            updateMode: group.updateMode || group.installMode || 'prefetch',\n                                            urls: matchedFiles.map(function (url) { return joinUrls(_this.baseHref, url); }),\n                                            patterns: (group.resources.urls || []).map(function (url) { return urlToRegex(url, _this.baseHref, true); }),\n                                        }];\n                            }\n                        });\n                    }); }))];\n            });\n        });\n    };\n    Generator.prototype.processDataGroups = function (config) {\n        var _this = this;\n        return (config.dataGroups || []).map(function (group) {\n            return {\n                name: group.name,\n                patterns: group.urls.map(function (url) { return urlToRegex(url, _this.baseHref, true); }),\n                strategy: group.cacheConfig.strategy || 'performance',\n                maxSize: group.cacheConfig.maxSize,\n                maxAge: parseDurationToMs(group.cacheConfig.maxAge),\n                timeoutMs: group.cacheConfig.timeout && parseDurationToMs(group.cacheConfig.timeout),\n                version: group.version !== undefined ? group.version : 1,\n            };\n        });\n    };\n    return Generator;\n}());\nfunction processNavigationUrls(baseHref, urls) {\n    if (urls === void 0) { urls = DEFAULT_NAVIGATION_URLS; }\n    return urls.map(function (url) {\n        var positive = !url.startsWith('!');\n        url = positive ? url : url.substr(1);\n        return { positive: positive, regex: \"^\" + urlToRegex(url, baseHref) + \"$\" };\n    });\n}\nfunction globListToMatcher(globs) {\n    var patterns = globs.map(function (pattern) {\n        if (pattern.startsWith('!')) {\n            return {\n                positive: false,\n                regex: new RegExp('^' + globToRegex(pattern.substr(1)) + '$'),\n            };\n        }\n        else {\n            return {\n                positive: true,\n                regex: new RegExp('^' + globToRegex(pattern) + '$'),\n            };\n        }\n    });\n    return function (file) { return matches(file, patterns); };\n}\nfunction matches(file, patterns) {\n    var res = patterns.reduce(function (isMatch, pattern) {\n        if (pattern.positive) {\n            return isMatch || pattern.regex.test(file);\n        }\n        else {\n            return isMatch && !pattern.regex.test(file);\n        }\n    }, false);\n    return res;\n}\nfunction urlToRegex(url, baseHref, literalQuestionMark) {\n    if (!url.startsWith('/') && url.indexOf('://') === -1) {\n        url = joinUrls(baseHref, url);\n    }\n    return globToRegex(url, literalQuestionMark);\n}\nfunction joinUrls(a, b) {\n    if (a.endsWith('/') && b.startsWith('/')) {\n        return a + b.substr(1);\n    }\n    else if (!a.endsWith('/') && !b.startsWith('/')) {\n        return a + '/' + b;\n    }\n    return a + b;\n}\nfunction withOrderedKeys(unorderedObj) {\n    var orderedObj = {};\n    Object.keys(unorderedObj).sort().forEach(function (key) { return orderedObj[key] = unorderedObj[key]; });\n    return orderedObj;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Generator };\n"]}