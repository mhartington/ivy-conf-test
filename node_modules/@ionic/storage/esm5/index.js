/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { NgModule } from '@angular/core';
import { provideStorage, Storage, StorageConfigToken } from './storage';
import * as ɵngcc0 from '@angular/core';
export { StorageConfigToken, Storage };
var IonicStorageModule = /** @class */ (function () {
    function IonicStorageModule() {
    }
    /**
     * @param {?=} storageConfig
     * @return {?}
     */
    IonicStorageModule.forRoot = /**
     * @param {?=} storageConfig
     * @return {?}
     */
    function (storageConfig) {
        if (storageConfig === void 0) { storageConfig = null; }
        return {
            ngModule: IonicStorageModule,
            providers: [
                { provide: StorageConfigToken, useValue: storageConfig },
                {
                    provide: Storage,
                    useFactory: provideStorage,
                    deps: [StorageConfigToken]
                }
            ]
        };
    };
IonicStorageModule.ngModuleDef = ɵngcc0.ɵɵdefineNgModule({ type: IonicStorageModule });
IonicStorageModule.ngInjectorDef = ɵngcc0.ɵɵdefineInjector({ factory: function IonicStorageModule_Factory(t) { return new (t || IonicStorageModule)(); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(IonicStorageModule, [{
        type: NgModule
    }], function () { return []; }, null);
    return IonicStorageModule;
}());
export { IonicStorageModule };
function IonicStorageModule_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    IonicStorageModule.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    IonicStorageModule.ctorParameters;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9taGFydGluZ3Rvbi9HaXRIdWIvaW9uaWMtY29uZmVyZW5jZS1hcHAvbm9kZV9tb2R1bGVzL0Bpb25pYy9zdG9yYWdlL2VzbTUvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXlCTTs7Ozs7MENBR0EiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgcHJvdmlkZVN0b3JhZ2UsIFN0b3JhZ2UsIFN0b3JhZ2VDb25maWdUb2tlbiB9IGZyb20gJy4vc3RvcmFnZSc7XG5leHBvcnQgeyBTdG9yYWdlQ29uZmlnVG9rZW4sIFN0b3JhZ2UgfTtcbnZhciBJb25pY1N0b3JhZ2VNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSW9uaWNTdG9yYWdlTW9kdWxlKCkge1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez89fSBzdG9yYWdlQ29uZmlnXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBJb25pY1N0b3JhZ2VNb2R1bGUuZm9yUm9vdCA9IC8qKlxuICAgICAqIEBwYXJhbSB7Pz19IHN0b3JhZ2VDb25maWdcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIChzdG9yYWdlQ29uZmlnKSB7XG4gICAgICAgIGlmIChzdG9yYWdlQ29uZmlnID09PSB2b2lkIDApIHsgc3RvcmFnZUNvbmZpZyA9IG51bGw7IH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5nTW9kdWxlOiBJb25pY1N0b3JhZ2VNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IFN0b3JhZ2VDb25maWdUb2tlbiwgdXNlVmFsdWU6IHN0b3JhZ2VDb25maWcgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFN0b3JhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHVzZUZhY3Rvcnk6IHByb3ZpZGVTdG9yYWdlLFxuICAgICAgICAgICAgICAgICAgICBkZXBzOiBbU3RvcmFnZUNvbmZpZ1Rva2VuXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9O1xuICAgIElvbmljU3RvcmFnZU1vZHVsZS5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IE5nTW9kdWxlIH0sXG4gICAgXTtcbiAgICByZXR1cm4gSW9uaWNTdG9yYWdlTW9kdWxlO1xufSgpKTtcbmV4cG9ydCB7IElvbmljU3RvcmFnZU1vZHVsZSB9O1xuZnVuY3Rpb24gSW9uaWNTdG9yYWdlTW9kdWxlX3RzaWNrbGVfQ2xvc3VyZV9kZWNsYXJhdGlvbnMoKSB7XG4gICAgLyoqIEB0eXBlIHshQXJyYXk8e3R5cGU6ICFGdW5jdGlvbiwgYXJnczogKHVuZGVmaW5lZHwhQXJyYXk8Pz4pfT59ICovXG4gICAgSW9uaWNTdG9yYWdlTW9kdWxlLmRlY29yYXRvcnM7XG4gICAgLyoqXG4gICAgICogQG5vY29sbGFwc2VcbiAgICAgKiBAdHlwZSB7ZnVuY3Rpb24oKTogIUFycmF5PChudWxsfHt0eXBlOiA/LCBkZWNvcmF0b3JzOiAodW5kZWZpbmVkfCFBcnJheTx7dHlwZTogIUZ1bmN0aW9uLCBhcmdzOiAodW5kZWZpbmVkfCFBcnJheTw/Pil9Pil9KT59XG4gICAgICovXG4gICAgSW9uaWNTdG9yYWdlTW9kdWxlLmN0b3JQYXJhbWV0ZXJzO1xufVxuIl19